# Build python wheels for indexed_gzip:
#     https://github.com/pauldmccarthy/indexed_gzip
#
# This configuration is based on multibuild:
#     https://github.com/matthew-brett/multibuild
#
# The following environment variables must be defined
#
#   - TWINE_USERNAME: - Username to use when uploading to pypi
#   - TWINE_PASSWORD: - Password to use when uploading to pypi

env:
    global:
        - REPO_DIR=indexed_gzip
        # Change this whenever you need to do a new build
        - BUILD_COMMIT=v1.3.3
        # Set to 0 for a test build, 1 to deploy builds
        - DEPLOY=0
        - BUILD_DEPENDS="Cython numpy"
        - TEST_DEPENDS="numpy nibabel pytest coverage pytest-cov six"
        - PLAT=x86_64
        - UNICODE_WIDTH=32

language: generic
services: docker
os:       linux
dist:     bionic
arch:     x86_64

jobs:
  include:
    - env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=x86_64
    - env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
    - arch: arm64
      env:
        - MB_PYTHON_VERSION=2.7
        - MB_ML_VER=2014
        - PLAT=aarch64
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8

    - env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=x86_64
        - UNICODE_WIDTH=16
    - env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
    - arch: arm64
      env:
        - MB_PYTHON_VERSION=2.7
        - MB_ML_VER=2014
        - PLAT=aarch64
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
        - UNICODE_WIDTH=16

    - env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=x86_64
    - env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
    - arch: arm64
      env:
        - MB_PYTHON_VERSION=3.6
        - MB_ML_VER=2014
        - PLAT=aarch64
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8

    - env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=x86_64
    - env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=i686
    - arch: arm64
      env:
        - MB_PYTHON_VERSION=3.7
        - MB_ML_VER=2014
        - PLAT=aarch64
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8

    - env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=x86_64
    - env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=i686
    - arch: arm64
      env:
        - MB_PYTHON_VERSION=3.8
        - MB_ML_VER=2014
        - PLAT=aarch64
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8

    - env:
        - MB_PYTHON_VERSION=3.9
        - PLAT=x86_64
    - env:
        - MB_PYTHON_VERSION=3.9
        - PLAT=i686
    - arch: arm64
      env:
        - MB_PYTHON_VERSION=3.9
        - MB_ML_VER=2014
        - PLAT=aarch64
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8

    - os: osx
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.6
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.7
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.8
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.9
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - BUILD_SOURCE=1


before_install:
    # Prepare for building
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - source config.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - if [ "x$BUILD_SOURCE" == "x" ]; then build_wheel  $REPO_DIR $PLAT; fi
    - if [ "$BUILD_SOURCE"  == "1" ]; then build_source $REPO_DIR;       fi

script:
    - if [ "x$BUILD_SOURCE" == "x" ]; then install_run $PLAT; fi

after_success:
    - if [[ "$DEPLOY" == "1" ]]; then sh ./deploy.sh "$TRAVIS_BUILD_DIR"/wheelhouse/*; fi
